<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>凉城丶忆梦</title>
  
  <subtitle>欢迎来到我的博客</subtitle>
  <link href="https://sw1128.github.io/atom.xml" rel="self"/>
  
  <link href="https://sw1128.github.io/"/>
  <updated>2022-02-14T18:29:54.008Z</updated>
  <id>https://sw1128.github.io/</id>
  
  <author>
    <name>zwhy</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Butterfly主题配置——如何使用阿里矢量图标库</title>
    <link href="https://sw1128.github.io/2022/02/15/add-icon/"/>
    <id>https://sw1128.github.io/2022/02/15/add-icon/</id>
    <published>2022-02-14T16:53:54.000Z</published>
    <updated>2022-02-14T18:29:54.008Z</updated>
    
    <content type="html"><![CDATA[<meta name="referrer" content="no-referrer"/><p>　　在阅读了butterfly主题配置的官方文档之后，发现其对使用阿里图标库方法的描述存在一些不足，比如不能自定义图标的大小。下面说一下另一种方法：</p><h4 id="1-注册iconfont，新建项目之后，将图标添加到自己的项目中"><a href="#1-注册iconfont，新建项目之后，将图标添加到自己的项目中" class="headerlink" title="1.注册iconfont，新建项目之后，将图标添加到自己的项目中"></a>1.注册<a href="https://www.iconfont.cn/">iconfont</a>，新建项目之后，将图标添加到自己的项目中</h4><p><img src="https://s2.loli.net/2022/02/15/OaIdeL97Qy4Xm6D.png" alt="1644858299285.png"></p><h4 id="2-点击Font-class中的链接，复制下来"><a href="#2-点击Font-class中的链接，复制下来" class="headerlink" title="2.点击Font class中的链接，复制下来"></a>2.点击Font class中的链接，复制下来</h4><p><img src="https://s2.loli.net/2022/02/15/P1IA8rEbQdgkSKi.png" alt="1644858418158.png"></p><h4 id="3-在-x2F-source目录下新建文件夹-source-x2F-css，新建文件font-css，然后将刚刚复制的代码粘贴进去"><a href="#3-在-x2F-source目录下新建文件夹-source-x2F-css，新建文件font-css，然后将刚刚复制的代码粘贴进去" class="headerlink" title="3.在&#x2F;source目录下新建文件夹 source&#x2F;css，新建文件font.css，然后将刚刚复制的代码粘贴进去"></a>3.在&#x2F;source目录下新建文件夹 source&#x2F;css，新建文件font.css，然后将刚刚复制的代码粘贴进去</h4><p><img src="https://s2.loli.net/2022/02/15/QXNv8OScH2ZPqKC.png" alt="1644858543738.png"></p><h4 id="4-在-config-butterfly-yml文件中找到inject，按如图所示设置"><a href="#4-在-config-butterfly-yml文件中找到inject，按如图所示设置" class="headerlink" title="4.在_config.butterfly.yml文件中找到inject，按如图所示设置"></a>4.在_config.butterfly.yml文件中找到inject，按如图所示设置</h4><p><img src="https://s2.loli.net/2022/02/15/GT7msktLvuMdBbP.png" alt="1644858630557.png"></p><h4 id="5-引用格式"><a href="#5-引用格式" class="headerlink" title="5.引用格式"></a>5.引用格式</h4><p><img src="https://s2.loli.net/2022/02/15/b5OIHD3SGhxF9wR.png" alt="1644858725880.png"></p><p><font size="3px">至此图标已经可以正常显示，但是显示效果偏小</p><p><img src="https://s2.loli.net/2022/02/15/QZJwbt5S4NdnsU8.png" alt="1644858899041.png"></p><p>此时修改font.css文件里的fon-size属性，默认是16px，我们改成22px，看一下效果<br><img src="https://s2.loli.net/2022/02/15/QXNv8OScH2ZPqKC.png" alt="1644858543738.png"></p><p>除此之外，在iconfont项目中可以点击编辑来调整图标的大小和位置，修改完保存即可</font><br><img src="https://s2.loli.net/2022/02/15/8DsQAfTwLG9cX2z.png" alt="1644859085320.png"><br><img src="https://s2.loli.net/2022/02/15/i7kYhdO2jzKfUxg.png" alt="1644859102454.png"></p>]]></content>
    
    
      
      
    <summary type="html">&lt;meta name=&quot;referrer&quot; content=&quot;no-referrer&quot;/&gt;

&lt;p&gt;　　在阅读了butterfly主题配置的官方文档之后，发现其对使用阿里图标库方法的描述存在一些不足，比如不能自定义图标的大小。下面说一下另一种方法：&lt;/p&gt;
&lt;h4 id=&quot;1-注</summary>
      
    
    
    
    <category term="butterfly" scheme="https://sw1128.github.io/categories/butterfly/"/>
    
    
  </entry>
  
  <entry>
    <title>数据绑定</title>
    <link href="https://sw1128.github.io/2022/02/14/data-binding/"/>
    <id>https://sw1128.github.io/2022/02/14/data-binding/</id>
    <published>2022-02-14T08:46:04.000Z</published>
    <updated>2022-02-14T09:40:35.886Z</updated>
    
    <content type="html"><![CDATA[<h2>vue中有两种数据绑定的方式：</h2><p>1.单向绑定(v-bind):数据只能从data流向页面。</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">v-bind:value</span>=<span class="string">&quot;name&quot;</span>&gt;</span></span><br></pre></td></tr></table></figure><p>2.双向绑定(v-model):数据不仅可以从data流向页面，还可以从页面流向data。</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">v-model:value</span>=<span class="string">&quot;name&quot;</span>&gt;</span></span><br></pre></td></tr></table></figure><br>以上为普通写法，为了方便，一般简写成以下形式：<figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">:value</span>=<span class="string">&quot;name&quot;</span>&gt;</span>   //v-bind:value =&gt; :value</span><br><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">v-model</span>=<span class="string">&quot;name&quot;</span>&gt;</span>  //v-model:value =&gt; v-model</span><br></pre></td></tr></table></figure><br><div class="note danger modern"><p>注意：以下代码是错误的，因为v-model只能应用在表单类元素（输入类元素）上。</p></div><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">h2</span> <span class="attr">v-model:x</span>=<span class="string">&quot;name&quot;</span>&gt;</span>你好<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="Tips"><a href="#Tips" class="headerlink" title="Tips"></a><center>Tips</center></h3><pre><code>1.双向绑定一般都应用在表单类元素上（如：input、select等）2.v-model:value 可以简写为 v-model，因为v-model默认收集的就是value值。</code></pre>]]></content>
    
    
    <summary type="html">Vue中的数据绑定</summary>
    
    
    
    <category term="Vue" scheme="https://sw1128.github.io/categories/Vue/"/>
    
    
  </entry>
  
  <entry>
    <title>修改Hexo默认的渲染引擎</title>
    <link href="https://sw1128.github.io/2022/02/13/hexo-renderer/"/>
    <id>https://sw1128.github.io/2022/02/13/hexo-renderer/</id>
    <published>2022-02-13T15:15:21.000Z</published>
    <updated>2022-02-14T08:00:24.179Z</updated>
    
    <content type="html"><![CDATA[<p>　　Hexo自带的渲染引擎为hexo-renderer-marked，如果想修改为其他渲染引擎（这里以hexo-renderer-markdown-it为例），只需执行如下指令：</p><p>1.卸载默认的渲染引擎</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm uninstall hexo-renderer-marked --save</span><br></pre></td></tr></table></figure><p>2.安装新的渲染引擎</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm i hexo-renderer-markdown-it --save</span><br></pre></td></tr></table></figure><p>执行完成后即为更换成功，若想更换其他渲染引擎同理。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;　　Hexo自带的渲染引擎为hexo-renderer-marked，如果想修改为其他渲染引擎（这里以hexo-renderer-markdown-it为例），只需执行如下指令：&lt;/p&gt;
&lt;p&gt;1.卸载默认的渲染引擎&lt;/p&gt;
&lt;figure class=&quot;highlight</summary>
      
    
    
    
    <category term="Hexo" scheme="https://sw1128.github.io/categories/Hexo/"/>
    
    
  </entry>
  
  <entry>
    <title>Hello vue</title>
    <link href="https://sw1128.github.io/2022/02/12/Hello-vue/"/>
    <id>https://sw1128.github.io/2022/02/12/Hello-vue/</id>
    <published>2022-02-12T15:50:22.000Z</published>
    <updated>2022-02-14T08:57:12.374Z</updated>
    
    <content type="html"><![CDATA[<h1 id="初识Vue"><a href="#初识Vue" class="headerlink" title=" 初识Vue"></a><center> 初识Vue</h1><h2 id="Vue是什么？"><a href="#Vue是什么？" class="headerlink" title="Vue是什么？"></a>Vue是什么？</h2><p>　　Vue (读音 &#x2F;vjuː&#x2F;，类似于 view) 是一套用于构建用户界面的渐进式框架。与其它大型框架不同的是，Vue 被设计为可以自底向上逐层应用。Vue 的核心库只关注视图层，不仅易于上手，还便于与第三方库或既有项目整合。另一方面，当与现代化的工具链以及各种支持类库结合使用时，Vue 也完全能够为复杂的单页应用提供驱动。</p><h2 id="一个简单的例子👇"><a href="#一个简单的例子👇" class="headerlink" title=" 一个简单的例子👇"></a><center> 一个简单的例子👇</h2><h3 id="引入vue"><a href="#引入vue" class="headerlink" title="引入vue"></a>引入vue</h3><p>vue.js文件可在<a href="https://cn.vuejs.org/index.html">Vue官网</a>下载，分为开发版本和生产版本。在根目录新建js文件夹，然后将下载好的vue.js文件放入文件夹中。</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">&quot;text/javascript&quot;</span> <span class="attr">src</span>=<span class="string">&quot;../js/vue.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="准备好一个容器"><a href="#准备好一个容器" class="headerlink" title="准备好一个容器"></a>准备好一个容器</h3><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;demo&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">h1</span>&gt;</span>Hello,&#123;&#123;name&#125;&#125;,Welcome to study vue！<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="阻止-vue-在启动时生成生产提示"><a href="#阻止-vue-在启动时生成生产提示" class="headerlink" title="阻止 vue 在启动时生成生产提示"></a>阻止 vue 在启动时生成生产提示</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="title class_">Vue</span>.<span class="property">config</span>.<span class="property">productionTip</span> = <span class="literal">false</span></span><br></pre></td></tr></table></figure><h3 id="创建Vue实例"><a href="#创建Vue实例" class="headerlink" title="创建Vue实例"></a>创建Vue实例</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">new</span> <span class="title class_">Vue</span>(&#123;</span><br><span class="line">    <span class="attr">el</span>:<span class="string">&#x27;#demo&#x27;</span>,     <span class="comment">//el用于指定当前Vue实例为哪个容器服务，值通常为css选择器字符串。</span></span><br><span class="line">    <span class="attr">data</span>:&#123;          <span class="comment">//data中用于存储数据，数据供el所指定的容器去使用，值我们暂时先写成一个对象。</span></span><br><span class="line">        <span class="attr">name</span>:<span class="string">&#x27;zwhy&#x27;</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;)</span><br></pre></td></tr></table></figure><h3 id="完整代码"><a href="#完整代码" class="headerlink" title="完整代码"></a>完整代码</h3><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span> /&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">title</span>&gt;</span>初识Vue<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">&quot;text/javascript&quot;</span> <span class="attr">src</span>=<span class="string">&quot;../js/vue.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    </span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;demo&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">h1</span>&gt;</span>Hello,&#123;&#123;name&#125;&#125;,Welcome to study vue！<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">&quot;text/javascript&quot;</span> &gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">        <span class="title class_">Vue</span>.<span class="property">config</span>.<span class="property">productionTip</span> = <span class="literal">false</span></span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">        <span class="keyword">new</span> <span class="title class_">Vue</span>(&#123;</span></span><br><span class="line"><span class="language-javascript">        <span class="attr">el</span>:<span class="string">&#x27;#demo&#x27;</span>, </span></span><br><span class="line"><span class="language-javascript">        <span class="attr">data</span>:&#123;</span></span><br><span class="line"><span class="language-javascript">            <span class="attr">name</span>:<span class="string">&#x27;zwhy&#x27;</span></span></span><br><span class="line"><span class="language-javascript">            &#125;</span></span><br><span class="line"><span class="language-javascript">        &#125;)</span></span><br><span class="line"><span class="language-javascript">    </span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><h1 id="小结"><a href="#小结" class="headerlink" title=" 小结"></a><center> 小结</h1><pre><code>1.想让Vue工作，就必须创建一个Vue实例，且要传入一个配置对象；2.root容器里的代码依然符合html规范，只不过混入了一些特殊的Vue语法；3.root容器里的代码被称为【Vue模板】；4.Vue实例和容器是一一对应的；5.真实开发中只有一个Vue实例，并且会配合着组件一起使用；6.&#123;&#123;xxx&#125;&#125;中的xxx要写js表达式，且xxx可以自动读取到data中的所有属性；7.一旦data中的数据发生改变，那么页面中用到该数据的地方也会自动更新；注意区分：js表达式 和 js代码(语句)  1.表达式：一个表达式会产生一个值，可以放在任何一个需要值的地方：     (1). a     (2). a+b     (3). demo(1)     (4). x === y ? &#39;a&#39; : &#39;b&#39;  2.js代码(语句)     (1). if()&#123;&#125;     (2). for()&#123;&#125;</code></pre>]]></content>
    
    
    <summary type="html">一起走进Vue的世界</summary>
    
    
    
    <category term="Vue" scheme="https://sw1128.github.io/categories/Vue/"/>
    
    
  </entry>
  
  <entry>
    <title>代码块测试</title>
    <link href="https://sw1128.github.io/2022/02/11/First_Code/"/>
    <id>https://sw1128.github.io/2022/02/11/First_Code/</id>
    <published>2022-02-11T09:35:37.000Z</published>
    <updated>2022-02-14T07:40:39.524Z</updated>
    
    <content type="html"><![CDATA[<figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;Hello World!&quot;</span>)</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;Hello World!&quot;</span>)</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;Hello World!&quot;</span>)</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;Hello World!&quot;</span>)</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;Hello World!&quot;</span>)</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;Hello World!&quot;</span>)</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;Hello World!&quot;</span>)</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;Hello World!&quot;</span>)</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;Hello World!&quot;</span>)</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;Hello World!&quot;</span>)</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;Hello World!&quot;</span>)</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;Hello World!&quot;</span>)</span><br></pre></td></tr></table></figure><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="title class_">Console</span>.<span class="title function_">log</span>(<span class="string">&quot;Hello World!&quot;</span>) <span class="title class_">Console</span>.<span class="title function_">log</span>(<span class="string">&quot;Hello World!&quot;</span>) <span class="title class_">Console</span>.<span class="title function_">log</span>(<span class="string">&quot;Hello World!&quot;</span>) <span class="title class_">Console</span>.<span class="title function_">log</span>(<span class="string">&quot;Hello World!&quot;</span>)</span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">这只是一个测试页，不用打开看了</summary>
    
    
    
    
  </entry>
  
  <entry>
    <title>新年快乐</title>
    <link href="https://sw1128.github.io/2022/02/10/Happy_new_year/"/>
    <id>https://sw1128.github.io/2022/02/10/Happy_new_year/</id>
    <published>2022-02-10T15:23:05.000Z</published>
    <updated>2022-02-14T16:26:04.464Z</updated>
    
    <content type="html"><![CDATA[<h2 id="2022，虎年大吉！"><a href="#2022，虎年大吉！" class="headerlink" title="2022，虎年大吉！"></a>2022，虎年大吉！</h2>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;2022，虎年大吉！&quot;&gt;&lt;a href=&quot;#2022，虎年大吉！&quot; class=&quot;headerlink&quot; title=&quot;2022，虎年大吉！&quot;&gt;&lt;/a&gt;2022，虎年大吉！&lt;/h2&gt;</summary>
      
    
    
    
    
  </entry>
  
</feed>
